(function init() {
	var numSquares = 6;
	var colors = [];
	var pickedColor;
	var squares = document.querySelectorAll(".square");
	var colorDisplay = document.getElementById("colorDisplay");
	var messageDisplay = document.querySelector("#message");
	var h1 = document.querySelector("h1");
	var resetButton = document.querySelector("#reset");
	var modeButtons = document.querySelectorAll(".mode");

	// ✅ Normalize color strings to compare reliably across browsers
	function normalizeColor(color) {
		return color.replace(/\s+/g, '').toLowerCase();
	}

	function setupModeButtons() {
		for (var i = 0; i < modeButtons.length; i++) {
			modeButtons[i].addEventListener("click", function () {
				modeButtons[0].classList.remove("selected");
				modeButtons[1].classList.remove("selected");
				this.classList.add("selected");
				numSquares = (this.textContent === "Easy") ? 3 : 6;
				reset();
			});
		}
	}

	function setupResetButton() {
		resetButton.addEventListener("click", reset);
	}

	function setupSquares() {
		for (var i = 0; i < squares.length; i++) {
			squares[i].addEventListener("click", function () {
				// ✅ Use getComputedStyle for compatibility
				var clickedColor = window.getComputedStyle(this).backgroundColor;

				if (normalizeColor(clickedColor) === normalizeColor(pickedColor)) {
					messageDisplay.textContent = "Correct!";
					changeColors(clickedColor);
					resetButton.textContent = "Play Again?";
					h1.style.background = clickedColor;
				} else {
					this.style.background = "#232323";
					messageDisplay.textContent = "Try Again";
				}
			});
		}
	}

	function reset() {
		colors = generateRandomColors(numSquares);
		pickedColor = pickColor();
		colorDisplay.textContent = pickedColor;
		resetButton.textContent = "New Colors";
		messageDisplay.textContent = "";

		for (var i = 0; i < squares.length; i++) {
			if (colors[i]) {
				squares[i].style.display = "block";
				squares[i].style.background = colors[i];
			} else {
				squares[i].style.display = "none";
			}
		}
		h1.style.background = "steelblue";
	}

	function changeColors(color) {
		for (var i = 0; i < squares.length; i++) {
			squares[i].style.background = color;
		}
	}

	function pickColor() {
		var randomNumber = Math.floor(Math.random() * colors.length);
		return colors[randomNumber];
	}

	function generateRandomColors(num) {
		var arr = [];
		for (var i = 0; i < num; i++) {
			arr.push(randomColor());
		}
		return arr;
	}

	function randomColor() {
		var redValue = Math.floor(Math.random() * 256);
		var greenValue = Math.floor(Math.random() * 256);
		var blueValue = Math.floor(Math.random() * 256);
		return "rgb(" + redValue + ", " + greenValue + ", " + blueValue + ")";
	}

	// ✅ Initialize everything
	setupModeButtons();
	setupResetButton();
	setupSquares();
	reset();
})();
